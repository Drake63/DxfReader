<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfCtrlLib">
    <DrawingImage x:Key="imageUp">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}"  Geometry="M1 4 L5 1 L9 4 L9 6 L5 3 L1 6 Z"/>
        </DrawingImage.Drawing>
    </DrawingImage>
    <DrawingImage x:Key="imageDown">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}"   Geometry="M1 3 L5 6 L9 3 L9 1 L5 4 L1 1 Z"/>
        </DrawingImage.Drawing>
    </DrawingImage>

    <Style x:Key="repBtnStyle" TargetType="{x:Type RepeatButton}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RenderTransformOrigin=" .5,.5"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                                    <Setter Property="Opacity" Value=".6"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                <GradientStop Color="#FFDCECFC" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="RenderTransform" TargetName="contentPresenter">
                                        <Setter.Value>
                                            <ScaleTransform ScaleY=".85"/>
                                        </Setter.Value>                                        
                                    </Setter>
                                    <!--<Setter Property="Background" Value="LightSteelBlue"/>-->
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#FFDCECFC" Offset="0"/>
                                                <GradientStop Color="#FFEBF4FC" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.BasedOn>
    </Style>
    
    <Style TargetType="{x:Type local:NumericUpDown}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumericUpDown}">

                    <Grid VerticalAlignment="{TemplateBinding VerticalAlignment}" ClipToBounds="{TemplateBinding ClipToBounds}">
                        <Border Name="PART_Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Name="PART_TextBox" Grid.RowSpan="2" VerticalAlignment="Center" BorderThickness="0" Height="{TemplateBinding Height}" VerticalContentAlignment="Center"
                                         Text="{Binding Path=Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Control}}}"
                                         Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericUpDown}}}"/>
                                <RepeatButton Name="PART_UpButton" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Padding ="1"  MinWidth="15" RenderTransformOrigin=".5,.5"
                                              Command="{x:Static local:NumericUpDown.UpCommand}" IsTabStop="False"
                                              BorderBrush="{Binding ElementName=PART_Border, Path=BorderBrush}"
                                              BorderThickness="{Binding ElementName=PART_Border, Path=BorderThickness}" Style="{StaticResource repBtnStyle}"
                                              Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericUpDown}}}">
                                    <Image Source="{StaticResource imageUp}"/>
                                </RepeatButton>
                                <RepeatButton Name="PART_DownButton" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" MinWidth="15" RenderTransformOrigin=".5,.5"
                                              Padding="1" Command="{x:Static local:NumericUpDown.DownCommand}" IsTabStop="False" 
                                              BorderBrush="{Binding ElementName=PART_Border, Path=BorderBrush}"
                                              BorderThickness="{Binding ElementName=PART_Border, Path=BorderThickness}" Style="{StaticResource repBtnStyle}"
                                              Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NumericUpDown}}}">
                                    <Image Source="{StaticResource imageDown}"/>
                                </RepeatButton>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>